<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.docmall.basic.admin.product.AdminProductMapper">

	<!-- 테이블의 컬럼명과 Vo, Dto 클래스의 필드명이 다를 때 사용. 지금은 컬럼명과 필드명이 같은 상태. -->
	<resultMap type="com.docmall.basic.admin.product.ProductVo" id="productMap">
		<id property="pro_num" column="pro_num" /> <!-- 이건 프라이머 키니까 id로 작성하는 것. 나머지는 result로 작성. -->
		<result property="cat_code" column="cat_code" />
		<result property="pro_name" column="pro_name" />
		<result property="pro_price" column="pro_price" />
		<result property="pro_discount" column="pro_discount" />
		<result property="pro_publisher" column="pro_publisher" />
		<result property="pro_content" column="pro_content" />
		<result property="pro_up_folder" column="pro_up_folder" />
		<result property="pro_img" column="pro_img" />
		<result property="pro_amount" column="pro_amount" />
		<result property="pro_buy" column="pro_buy" />
		<result property="pro_date" column="pro_date" />
		<result property="pro_updatedate" column="pro_updatedate" />
	</resultMap>

	<insert id="pro_insert">
		INSERT INTO
			product_tbl(pro_num,
					    cat_code,
					    pro_name,
					    pro_price,
					    pro_discount,
					    pro_publisher,
					    pro_content,
					    pro_up_folder,
					    pro_img,
					    pro_amount,
					    pro_buy
					)
		VALUES(SEQ_PRO_NUM.NEXTVAL, #{cat_code}, #{pro_name}, #{pro_price},
		 #{pro_discount}, #{pro_publisher}, #{pro_content}, #{pro_up_folder}, #{pro_img}, #{pro_amount}, #{pro_buy})
	</insert>


	<!-- 검색조건 1) 목록 2) 총 데이터 개수 에서 공통사용됨. 검색조건이 두 군데 이상에서 사용되는 경우 sql로 만듦.-->
	<!-- 상품검색, 제조사검색, 내용 등등 -->
	<!-- ID가 메서드명이었으나 sql에선 참조할 이름인 것임. -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR"> <!-- prefixOverrides는 foreach결과 중 맨 앞 OR을 제거 -->
			<foreach collection="typeArr" item="type"> <!-- 필드명을 쓰면 이게 getter로 인식됨. -->
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
							pro_name like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'P'.toString()">
							pro_publisher like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'C'.toString()">
							pro_content like '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- 공통사항 : 검색조건 추가 / 인덱스힌트, 인라인뷰-->
	<!-- getter에 의한 메서드 동작 -->
	<select id="pro_list" resultMap="productMap" parameterType="com.docmall.basic.common.dto.Criteria">
			SELECT
			    pro_num,
			    cat_code,
			    pro_name,
			    pro_price,
			    pro_discount,
			    pro_publisher,
			    pro_content,
			    pro_up_folder,
			    pro_img,
			    pro_amount,
			    pro_buy,
			    pro_date,
			    pro_updatedate
			FROM (
			    SELECT /*+ INDEX_DESC(product_tbl PK_PRO_NUM) */
			        ROWNUM AS rn,
			        pro_num,
				    cat_code,
				    pro_name,
				    pro_price,
				    pro_discount,
				    pro_publisher,
				    pro_content,
				    pro_up_folder,
				    pro_img,
				    pro_amount,
				    pro_buy,
				    pro_date,
				    pro_updatedate
			    FROM
			        product_tbl
			    WHERE
					<include refid="criteria"></include>
		<![CDATA[
					ROWNUM <= (#{pageNum} * #{amount})
		]]>
			)
			WHERE
			    rn > (#{pageNum} - 1 ) * #{amount}
	</select>
	
	<!-- 공통사항 : 검색조건 추가 -->
	<!-- 사용자가 검색을 사용 안하면 ""이 반환되어 WHERE절 뒤에 붙는 코드가 없어서 에러맞음.
		그래서 조건식을 추가로 넣어줘서 에러 맞지 않도록 함. -->
	<select id="getTotalCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			product_tbl
		WHERE
			<include refid="criteria"></include>
			pro_num > 0
	</select>

	<select id="pro_edit" parameterType="Integer" resultType="com.docmall.basic.admin.product.ProductVo">
		SELECT
		    pro_num,
		    cat_code,
		    pro_name,
		    pro_price,
		    pro_discount,
		    pro_publisher,
		    pro_content,
		    pro_up_folder,
		    pro_img,
		    pro_amount,
		    pro_buy,
		    pro_date,
		    pro_updatedate
		FROM
		    product_tbl
		WHERE
			pro_num = #{pro_num}
	</select>

	<update id="pro_edit_ok" parameterType="com.docmall.basic.admin.product.ProductVo">
		UPDATE
			product_tbl
		SET
		    cat_code = #{cat_code},
		    pro_name = #{pro_name},
		    pro_price = #{pro_price},
		    pro_discount = #{pro_discount},
		    pro_publisher = #{pro_publisher},
		    pro_content = #{pro_content},
		    pro_up_folder = #{pro_up_folder},
		    pro_img = #{pro_img},
		    pro_amount = #{pro_amount},
		    pro_buy = #{pro_buy},
		    pro_updatedate = SYSDATE
		WHERE
			pro_num = #{pro_num}
	</update>

	<delete id="pro_delete" parameterType="Integer">
		DELETE FROM
			product_tbl
		WHERE
			pro_num = #{pro_num}
	</delete>

	<update id="pro_checked_modify1" parameterType="map">
		UPDATE
			product_tbl
		SET
			pro_price = #{pro_price},
			pro_buy = #{pro_buy}
		WHERE
			pro_num = #{pro_num}
	</update>

	<update id="pro_checked_modify2" parameterType="list">
		<foreach collection="list" item="item" open="declare begin" separator=";" close="; end;">
			UPDATE
				product_tbl
			SET
				pro_price = #{item.pro_price},
				pro_buy = #{item.pro_buy}
			WHERE
				pro_num = #{item.pro_num}
		</foreach>
	</update>





</mapper>